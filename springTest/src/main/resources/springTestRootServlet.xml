<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd 
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd" default-autowire="byName">
    
    
    
    <!-- 查询spring，SpringMVC，mybatis的配置文件 -->
    <!-- 20180809使用 属性文件配置的数据库无法连接，直接写数据源可连接。测试运行。问题未解决？？？查找。下一步，配置springMVC从界面端实现数据的查询插入-->
    
    
    
    
    <description>Spring公共配置</description> 
    <!--  <import resource="classpath*:demo-db.xml"/> -->
    
    
    
    
    <!-- 自动扫描 -->
    <context:component-scan base-package="spring_mybatis.service,spring_mybatis.dao,spring_mybatis.action"/>
    
    
    
    
    <bean id="propertyConfigure" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:mysqlDB.properties</value> 
                <!--  
                <value>classpath:/opt/demo/config/demo-db2.properties</value> 
                -->
            </list>
        </property>
    </bean>
    
    
    
    
    
    <!-- spring配置数据源 -->
    <!--  
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="username" value="${jdbc.username}"></property>
    </bean>
    -->
    
    
    
    
    
    <!-- mybatis配置数据源 -->
    <!--数据库连接池配置-->
    <!-- 
    <bean id="dataSource"  class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">  
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
     -->
     
    <bean id="dataSource"  class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">  
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/testtransaction?characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="mysql123"/>
    </bean>
    
    
    
    
    
    <!-- spring和MyBatis完美整合 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 具体指定xml文件，可不配 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 自动扫描mapping.xml文件，**表示迭代查找 ,,也可在mybatis-config.xml中单独指定xml文件 -->
        <property name="mapperLocations" value="classpath:spring_mybatis/dao/*.xml"/>
    </bean>
    
    
    
    
    <!-- 自动扫描spring_mybatis/dao下的所有dao接口，并实现这些接口，可直接在程序中使用dao接口，不用再获取sqlsession对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--
        basePackage 属性是映射器接口文件的包路径。
                 你可以使用分号或逗号 作为分隔符设置多于一个的包路径
        -->
        <property name="basePackage" value="spring_mybatis.dao"/>
        <!--
                 因为会自动装配 SqlSessionFactory和SqlSessionTemplate
                 所以没 有 必 要 去 指 定 SqlSessionFactory或 SqlSessionTemplate
                 因此可省略不配置；
                 但是,如果你使 用了一个 以上的 DataSource，那么自动装配可能会失效。
                 这种 情况下，你可以使用sqlSessionFactoryBeanName或sqlSessionTemplateBeanName属性来设置正确的 bean名称来使用；
        -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    
    
    
    
    
    
    <!-- 添加spring申明式事务支持 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
          <property name="dataSource" ref="dataSource" />
    </bean>
    
    <tx:annotation-driven transaction-manager="txManager" />
    
    
    
    
    
    
    
    
    
</beans>